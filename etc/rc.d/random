#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: random
# REQUIRE: FILESYSTEMS
# BEFORE: netif
# KEYWORD: nojail shutdown

. /etc/rc.subr

name="random"
start_cmd="random_start"
stop_cmd="random_stop"

extra_commands="saveseed"
saveseed_cmd="${name}_stop"

random_start()
{
	echo -n 'Entropy harvesting:'

	if checkyesno harvest_interrupt; then
		${SYSCTL} kern.random.sys.harvest.interrupt=1 >/dev/null
		echo -n ' interrupts'
	else
		${SYSCTL} kern.random.sys.harvest.interrupt=0 >/dev/null
	fi

	if checkyesno harvest_ethernet; then
		${SYSCTL} kern.random.sys.harvest.ethernet=1 >/dev/null
		echo -n ' ethernet'
	else
		${SYSCTL} kern.random.sys.harvest.ethernet=0 >/dev/null
	fi

	if checkyesno harvest_p_to_p; then
		${SYSCTL} kern.random.sys.harvest.point_to_point=1 >/dev/null
		echo -n ' point_to_point'
	else
		${SYSCTL} kern.random.sys.harvest.point_to_point=0 >/dev/null
	fi

	if checkyesno harvest_swi; then
		${SYSCTL} kern.random.sys.harvest.swi=1 >/dev/null
		echo -n ' swi'
	else
		${SYSCTL} kern.random.sys.harvest.swi=0 >/dev/null
	fi

	echo '.'
}

random_stop()
{
	# Write some entropy so when the machine reboots /dev/random
	# can be reseeded
	#
	case ${entropy_file} in
	[Nn][Oo] | '')
		;;
	*)
		echo -n 'Writing entropy file:'
		rm -f ${entropy_file} 2> /dev/null
		oumask=`umask`
		umask 077
		if touch ${entropy_file} 2> /dev/null; then
			entropy_file_confirmed="${entropy_file}"
		else
			# Try this as a reasonable alternative for read-only
			# roots, diskless workstations, etc.
			rm -f /var/db/entropy-file 2> /dev/null
			if touch /var/db/entropy-file 2> /dev/null; then
				entropy_file_confirmed=/var/db/entropy-file
			fi
		fi
		case ${entropy_file_confirmed} in
		'')
			warn 'write failed (read-only fs?)'
			;;
		*)
			dd if=/dev/random of=${entropy_file_confirmed} \
			   bs=4096 count=1 2> /dev/null
			echo '.'
			;;
		esac
		umask ${oumask}
		;;
	esac
}

load_rc_config $name
run_rc_command "$1"
