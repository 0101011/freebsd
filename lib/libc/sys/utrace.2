.\"	$NetBSD: utrace.2,v 1.11 2003/04/24 12:17:49 wiz Exp $
.\"
.\" Copyright (c) 2000 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Gregory McGarry <g.mcgarry@ieee.org>.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd December 28, 2000
.Dt UTRACE 2
.Os
.Sh NAME
.Nm utrace
.Nd insert user record in ktrace log
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In sys/param.h
.In sys/time.h
.In sys/uio.h
.In sys/ktrace.h
.Ft int
.Fn utrace "const void *addr" "size_t len"
.Bd -literal
struct utrace2_data {
	int	ud_type;	/* type of utrace record,
				   must be >= UTRACE_APPLICATIONMIN */
	int	ud_version;	/* version of 'type' */
	char	application_data[SIZE];	/* your data */
};
.Ed
.Ft int
.Fn utrace2 "const void *addr" "size_t len"
.Sh DESCRIPTION
Adds a record to the process trace with information supplied by user.
The record contains
.Fa len
bytes from memory pointed to by
.Fa addr .
This call only has an effect if the calling process is being traced.
.Pp
The old
.Fn utrace
system call uses unstructured data and should be avoided.
.Pp
The new
.Fn utrace2
function is for structured data and should be used with an overlay structure
that matches the
.Vt struct utrace2_data
above.
.Pp The format of the overlay must begin with two integer (int) fields.
The first is the utrace record type, for applications it must be
greater than or equal to UTRACE_APPLICATIONMIN (defined in
.In sys/ktrace.h )
The second should be the version of the record.
.Pp
.Sh EXAMPLES FOR USER CODE
An example for
.Em non-system
code:
.Bd -literal
    #define	MY_UTRACE	(UTRACE_APPLICATIONMIN + 1)
    #define	D_SIZE		20
    struct my_utrace2_data {
	    int  ud_type;	/* type of utrace record,
				       must be >= UTRACE_APPLICATIONMIN */
	    int  ud_version;	/* version of 'type' */
	    char hello[D_SIZE];	/* your data */
    } ud;

    ud.ud_type = MY_UTRACE;
    ud.ud_version = 1;
    strcpy(ud.hello, "world");
    utrace2(&ud, sizeof(ud));

.Ed
.Sh EXAMPLES FOR FREEBSD SYSTEM CODE
An example for a
.Em system library
(ONLY FOR BASE FREEBSD):
.Pp
First add an entry to
.In sys/ktrace.h 
near
.Dv UTRACE_MALLOC .
Then start writing records using code like this:
.Bd -literal
    #define	UTRACE_THREAD_NEW	1
    #define	UTRACE_THREAD_DEL	2
    struct utrace2_thread_data {
	    int  ud_type;	/* type of utrace record,
				       must be >= UTRACE_APPLICATIONMIN */
	    int  ud_version;	/* version of 'type' */
	    int  ud_thread_op;	/* UTRACE_THREAD_NEW/UTRACE_THREAD_DEL */
	    int  ud_thread_id;	/* id of thread */
    };

    int
    thread_create(void)
    {
	int tid;
	struct utrace2_thread_data ud;

	tid = get_new_tid();
	ud.ud_type = UTRACE_THREAD;
	ud.ud_version = 1;
	ud.ud_thread_op = UTRACE_THREAD_NEW;
	ud.ud_thread_id = tid;
	return tid;
    }
.Ed
.Pp
Then you should add your new data type to
.Xr kdump 1 .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EINVAL
Specified data length
.Fa len
was bigger than
.Dv KTR_USER_MAXLEN .
.It Bq Er ENOMEM
Insufficient memory to honor the request.
.It Bq Er ENOSYS
Currently running kernel was compiled without
.Xr ktrace 2
support
.Pq Cd "options KTRACE" .
.El
.Sh SEE ALSO
.Xr kdump 1 ,
.Xr ktrace 1 ,
.Xr ktrace 2
.Sh HISTORY
The
.Fn utrace
system call first appeared in
.Fx 2.2 .
